//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Logic.Components.Game.SceneObjectComponent sceneObject { get { return (Logic.Components.Game.SceneObjectComponent)GetComponent(GameComponentsLookup.SceneObject); } }
    public bool hasSceneObject { get { return HasComponent(GameComponentsLookup.SceneObject); } }

    public void AddSceneObject(string newName, bool newIsTag) {
        var index = GameComponentsLookup.SceneObject;
        var component = (Logic.Components.Game.SceneObjectComponent)CreateComponent(index, typeof(Logic.Components.Game.SceneObjectComponent));
        component.name = newName;
        component.isTag = newIsTag;
        AddComponent(index, component);
    }

    public void ReplaceSceneObject(string newName, bool newIsTag) {
        var index = GameComponentsLookup.SceneObject;
        var component = (Logic.Components.Game.SceneObjectComponent)CreateComponent(index, typeof(Logic.Components.Game.SceneObjectComponent));
        component.name = newName;
        component.isTag = newIsTag;
        ReplaceComponent(index, component);
    }

    public void RemoveSceneObject() {
        RemoveComponent(GameComponentsLookup.SceneObject);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSceneObject;

    public static Entitas.IMatcher<GameEntity> SceneObject {
        get {
            if (_matcherSceneObject == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SceneObject);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSceneObject = matcher;
            }

            return _matcherSceneObject;
        }
    }
}
