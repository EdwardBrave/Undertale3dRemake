//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity inputControlsEntity { get { return GetGroup(InputMatcher.InputControls).GetSingleEntity(); } }
    public Input.Components.InputControlsComponent inputControls { get { return inputControlsEntity.inputControls; } }
    public bool hasInputControls { get { return inputControlsEntity != null; } }

    public InputEntity SetInputControls(GameControls newValue) {
        if (hasInputControls) {
            throw new Entitas.EntitasException("Could not set InputControls!\n" + this + " already has an entity with Input.Components.InputControlsComponent!",
                "You should check if the context already has a inputControlsEntity before setting it or use context.ReplaceInputControls().");
        }
        var entity = CreateEntity();
        entity.AddInputControls(newValue);
        return entity;
    }

    public void ReplaceInputControls(GameControls newValue) {
        var entity = inputControlsEntity;
        if (entity == null) {
            entity = SetInputControls(newValue);
        } else {
            entity.ReplaceInputControls(newValue);
        }
    }

    public void RemoveInputControls() {
        inputControlsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Input.Components.InputControlsComponent inputControls { get { return (Input.Components.InputControlsComponent)GetComponent(InputComponentsLookup.InputControls); } }
    public bool hasInputControls { get { return HasComponent(InputComponentsLookup.InputControls); } }

    public void AddInputControls(GameControls newValue) {
        var index = InputComponentsLookup.InputControls;
        var component = (Input.Components.InputControlsComponent)CreateComponent(index, typeof(Input.Components.InputControlsComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceInputControls(GameControls newValue) {
        var index = InputComponentsLookup.InputControls;
        var component = (Input.Components.InputControlsComponent)CreateComponent(index, typeof(Input.Components.InputControlsComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveInputControls() {
        RemoveComponent(InputComponentsLookup.InputControls);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherInputControls;

    public static Entitas.IMatcher<InputEntity> InputControls {
        get {
            if (_matcherInputControls == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.InputControls);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherInputControls = matcher;
            }

            return _matcherInputControls;
        }
    }
}
