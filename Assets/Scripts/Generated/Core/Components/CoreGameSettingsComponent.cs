//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Core.Data;

public partial class CoreContext {

    public CoreEntity gameSettingsEntity { get { return GetGroup(CoreMatcher.GameSettings).GetSingleEntity(); } }
    public GameSettingsComponent gameSettings { get { return gameSettingsEntity.gameSettings; } }
    public bool hasGameSettings { get { return gameSettingsEntity != null; } }

    public CoreEntity SetGameSettings(GameSettings newValue) {
        if (hasGameSettings) {
            throw new Entitas.EntitasException("Could not set GameSettings!\n" + this + " already has an entity with GameSettingsComponent!",
                "You should check if the context already has a gameSettingsEntity before setting it or use context.ReplaceGameSettings().");
        }
        var entity = CreateEntity();
        entity.AddGameSettings(newValue);
        return entity;
    }

    public void ReplaceGameSettings(GameSettings newValue) {
        var entity = gameSettingsEntity;
        if (entity == null) {
            entity = SetGameSettings(newValue);
        } else {
            entity.ReplaceGameSettings(newValue);
        }
    }

    public void RemoveGameSettings() {
        gameSettingsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreEntity {

    public GameSettingsComponent gameSettings { get { return (GameSettingsComponent)GetComponent(CoreComponentsLookup.GameSettings); } }
    public bool hasGameSettings { get { return HasComponent(CoreComponentsLookup.GameSettings); } }

    public void AddGameSettings(GameSettings newValue) {
        var index = CoreComponentsLookup.GameSettings;
        var component = (GameSettingsComponent)CreateComponent(index, typeof(GameSettingsComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameSettings(GameSettings newValue) {
        var index = CoreComponentsLookup.GameSettings;
        var component = (GameSettingsComponent)CreateComponent(index, typeof(GameSettingsComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameSettings() {
        RemoveComponent(CoreComponentsLookup.GameSettings);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CoreMatcher {

    static Entitas.IMatcher<CoreEntity> _matcherGameSettings;

    public static Entitas.IMatcher<CoreEntity> GameSettings {
        get {
            if (_matcherGameSettings == null) {
                var matcher = (Entitas.Matcher<CoreEntity>)Entitas.Matcher<CoreEntity>.AllOf(CoreComponentsLookup.GameSettings);
                matcher.componentNames = CoreComponentsLookup.componentNames;
                _matcherGameSettings = matcher;
            }

            return _matcherGameSettings;
        }
    }
}
