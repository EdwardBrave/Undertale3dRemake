//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreEntity {

    public Core.UnityScene.Components.SceneOffsetComponent sceneOffset { get { return (Core.UnityScene.Components.SceneOffsetComponent)GetComponent(CoreComponentsLookup.SceneOffset); } }
    public bool hasSceneOffset { get { return HasComponent(CoreComponentsLookup.SceneOffset); } }

    public void AddSceneOffset(UnityEngine.Vector3 newValue) {
        var index = CoreComponentsLookup.SceneOffset;
        var component = (Core.UnityScene.Components.SceneOffsetComponent)CreateComponent(index, typeof(Core.UnityScene.Components.SceneOffsetComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceSceneOffset(UnityEngine.Vector3 newValue) {
        var index = CoreComponentsLookup.SceneOffset;
        var component = (Core.UnityScene.Components.SceneOffsetComponent)CreateComponent(index, typeof(Core.UnityScene.Components.SceneOffsetComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveSceneOffset() {
        RemoveComponent(CoreComponentsLookup.SceneOffset);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CoreMatcher {

    static Entitas.IMatcher<CoreEntity> _matcherSceneOffset;

    public static Entitas.IMatcher<CoreEntity> SceneOffset {
        get {
            if (_matcherSceneOffset == null) {
                var matcher = (Entitas.Matcher<CoreEntity>)Entitas.Matcher<CoreEntity>.AllOf(CoreComponentsLookup.SceneOffset);
                matcher.componentNames = CoreComponentsLookup.componentNames;
                _matcherSceneOffset = matcher;
            }

            return _matcherSceneOffset;
        }
    }
}
