//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreEntity {

    public Core.UnityScene.Components.LoadSceneComponent loadScene { get { return (Core.UnityScene.Components.LoadSceneComponent)GetComponent(CoreComponentsLookup.LoadScene); } }
    public bool hasLoadScene { get { return HasComponent(CoreComponentsLookup.LoadScene); } }

    public void AddLoadScene(string newName, UnityEngine.SceneManagement.LoadSceneMode newMode) {
        var index = CoreComponentsLookup.LoadScene;
        var component = (Core.UnityScene.Components.LoadSceneComponent)CreateComponent(index, typeof(Core.UnityScene.Components.LoadSceneComponent));
        component.name = newName;
        component.mode = newMode;
        AddComponent(index, component);
    }

    public void ReplaceLoadScene(string newName, UnityEngine.SceneManagement.LoadSceneMode newMode) {
        var index = CoreComponentsLookup.LoadScene;
        var component = (Core.UnityScene.Components.LoadSceneComponent)CreateComponent(index, typeof(Core.UnityScene.Components.LoadSceneComponent));
        component.name = newName;
        component.mode = newMode;
        ReplaceComponent(index, component);
    }

    public void RemoveLoadScene() {
        RemoveComponent(CoreComponentsLookup.LoadScene);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CoreMatcher {

    static Entitas.IMatcher<CoreEntity> _matcherLoadScene;

    public static Entitas.IMatcher<CoreEntity> LoadScene {
        get {
            if (_matcherLoadScene == null) {
                var matcher = (Entitas.Matcher<CoreEntity>)Entitas.Matcher<CoreEntity>.AllOf(CoreComponentsLookup.LoadScene);
                matcher.componentNames = CoreComponentsLookup.componentNames;
                _matcherLoadScene = matcher;
            }

            return _matcherLoadScene;
        }
    }
}
