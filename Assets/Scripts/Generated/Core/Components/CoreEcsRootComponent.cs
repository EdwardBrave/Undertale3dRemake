//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreContext {

    public CoreEntity ecsRootEntity { get { return GetGroup(CoreMatcher.EcsRoot).GetSingleEntity(); } }
    public EcsRootComponent ecsRoot { get { return ecsRootEntity.ecsRoot; } }
    public bool hasEcsRoot { get { return ecsRootEntity != null; } }

    public CoreEntity SetEcsRoot(Main.EcsRoot newValue) {
        if (hasEcsRoot) {
            throw new Entitas.EntitasException("Could not set EcsRoot!\n" + this + " already has an entity with EcsRootComponent!",
                "You should check if the context already has a ecsRootEntity before setting it or use context.ReplaceEcsRoot().");
        }
        var entity = CreateEntity();
        entity.AddEcsRoot(newValue);
        return entity;
    }

    public void ReplaceEcsRoot(Main.EcsRoot newValue) {
        var entity = ecsRootEntity;
        if (entity == null) {
            entity = SetEcsRoot(newValue);
        } else {
            entity.ReplaceEcsRoot(newValue);
        }
    }

    public void RemoveEcsRoot() {
        ecsRootEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreEntity {

    public EcsRootComponent ecsRoot { get { return (EcsRootComponent)GetComponent(CoreComponentsLookup.EcsRoot); } }
    public bool hasEcsRoot { get { return HasComponent(CoreComponentsLookup.EcsRoot); } }

    public void AddEcsRoot(Main.EcsRoot newValue) {
        var index = CoreComponentsLookup.EcsRoot;
        var component = (EcsRootComponent)CreateComponent(index, typeof(EcsRootComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceEcsRoot(Main.EcsRoot newValue) {
        var index = CoreComponentsLookup.EcsRoot;
        var component = (EcsRootComponent)CreateComponent(index, typeof(EcsRootComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveEcsRoot() {
        RemoveComponent(CoreComponentsLookup.EcsRoot);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CoreMatcher {

    static Entitas.IMatcher<CoreEntity> _matcherEcsRoot;

    public static Entitas.IMatcher<CoreEntity> EcsRoot {
        get {
            if (_matcherEcsRoot == null) {
                var matcher = (Entitas.Matcher<CoreEntity>)Entitas.Matcher<CoreEntity>.AllOf(CoreComponentsLookup.EcsRoot);
                matcher.componentNames = CoreComponentsLookup.componentNames;
                _matcherEcsRoot = matcher;
            }

            return _matcherEcsRoot;
        }
    }
}
