//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Core.Data;

public partial class CoreContext {

    public CoreEntity coreConfigEntity { get { return GetGroup(CoreMatcher.CoreConfig).GetSingleEntity(); } }
    public CoreConfigComponent coreConfig { get { return coreConfigEntity.coreConfig; } }
    public bool hasCoreConfig { get { return coreConfigEntity != null; } }

    public CoreEntity SetCoreConfig(CoreConfig newValue) {
        if (hasCoreConfig) {
            throw new Entitas.EntitasException("Could not set CoreConfig!\n" + this + " already has an entity with CoreConfigComponent!",
                "You should check if the context already has a coreConfigEntity before setting it or use context.ReplaceCoreConfig().");
        }
        var entity = CreateEntity();
        entity.AddCoreConfig(newValue);
        return entity;
    }

    public void ReplaceCoreConfig(CoreConfig newValue) {
        var entity = coreConfigEntity;
        if (entity == null) {
            entity = SetCoreConfig(newValue);
        } else {
            entity.ReplaceCoreConfig(newValue);
        }
    }

    public void RemoveCoreConfig() {
        coreConfigEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreEntity {

    public CoreConfigComponent coreConfig { get { return (CoreConfigComponent)GetComponent(CoreComponentsLookup.CoreConfig); } }
    public bool hasCoreConfig { get { return HasComponent(CoreComponentsLookup.CoreConfig); } }

    public void AddCoreConfig(CoreConfig newValue) {
        var index = CoreComponentsLookup.CoreConfig;
        var component = (CoreConfigComponent)CreateComponent(index, typeof(CoreConfigComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCoreConfig(CoreConfig newValue) {
        var index = CoreComponentsLookup.CoreConfig;
        var component = (CoreConfigComponent)CreateComponent(index, typeof(CoreConfigComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCoreConfig() {
        RemoveComponent(CoreComponentsLookup.CoreConfig);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CoreMatcher {

    static Entitas.IMatcher<CoreEntity> _matcherCoreConfig;

    public static Entitas.IMatcher<CoreEntity> CoreConfig {
        get {
            if (_matcherCoreConfig == null) {
                var matcher = (Entitas.Matcher<CoreEntity>)Entitas.Matcher<CoreEntity>.AllOf(CoreComponentsLookup.CoreConfig);
                matcher.componentNames = CoreComponentsLookup.componentNames;
                _matcherCoreConfig = matcher;
            }

            return _matcherCoreConfig;
        }
    }
}
