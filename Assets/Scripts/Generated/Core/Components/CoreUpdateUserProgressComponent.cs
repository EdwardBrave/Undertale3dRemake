//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CoreEntity {

    static readonly Logic.Components.Core.UpdateUserProgressComponent updateUserProgressComponent = new Logic.Components.Core.UpdateUserProgressComponent();

    public bool isUpdateUserProgress {
        get { return HasComponent(CoreComponentsLookup.UpdateUserProgress); }
        set {
            if (value != isUpdateUserProgress) {
                var index = CoreComponentsLookup.UpdateUserProgress;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : updateUserProgressComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CoreMatcher {

    static Entitas.IMatcher<CoreEntity> _matcherUpdateUserProgress;

    public static Entitas.IMatcher<CoreEntity> UpdateUserProgress {
        get {
            if (_matcherUpdateUserProgress == null) {
                var matcher = (Entitas.Matcher<CoreEntity>)Entitas.Matcher<CoreEntity>.AllOf(CoreComponentsLookup.UpdateUserProgress);
                matcher.componentNames = CoreComponentsLookup.componentNames;
                _matcherUpdateUserProgress = matcher;
            }

            return _matcherUpdateUserProgress;
        }
    }
}
